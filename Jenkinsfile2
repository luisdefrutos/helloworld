 pipeline {
    agent none

    stages {
        stage('Inicio') {
            agent any
            steps {
                echo 'Reto 2 - Inicio del pipeline distribuido'
            }
        }

        stage('Servicios en paralelo') {
            parallel {
                stage('Flask') {
                    agent { label 'flask-agent' }
                    steps {
                        echo 'Lanzando servidor Flask'
                        bat 'start /B python app/api.py'
                        stash includes: 'app/**', name: 'flask-app'
                    }
                }

                stage('WireMock') {
                    agent { label 'wiremock-agent' }
                    steps {
                        echo 'Lanzando WireMock'
                        bat '''
echo === DIRECTORIO ACTUAL ===
cd
dir
echo === INTENTANDO EJECUTAR WIREMOCK ===
if exist wiremock-standalone-4.0.0-beta.2.jar (
    start /B java -jar wiremock-standalone-4.0.0-beta.2.jar --port 8081
) else (
    echo ERROR: No se encuentra wiremock-standalone-4.0.0-beta.2.jar
    exit /b 1
)
'''
                        bat '''
if exist mappings (
    echo === Carpeta mappings encontrada ===
    dir mappings
) else (
    echo WARNING: No se encontró la carpeta mappings
)
'''
                        stash includes: 'mappings/**', name: 'wiremock-mappings', allowEmpty: true
                    }
                }
            }
        }

        stage('Pruebas') {
            agent { label 'test-agent' }
            steps {
                unstash 'flask-app'
                unstash 'wiremock-mappings'
                echo 'Ejecutando pruebas REST'
                bat 'pytest test/rest --maxfail=1 --disable-warnings -q'
                echo 'Ejecutando pruebas unitarias'
                bat 'pytest test/unit --maxfail=1 --disable-warnings -q'
            }
        }

        stage('Fin') {
            agent any
            steps {
                echo 'Reto 2 finalizado correctamente.'
            }
        }
    }

    post {
        always {
            node('test-agent') {
                echo 'Finalizando procesos si siguen en ejecución...'
                bat 'taskkill /F /IM java.exe || exit 0'
                bat 'taskkill /F /IM python.exe || exit 0'
            }
        }
    }
}
